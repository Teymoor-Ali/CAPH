-- -------------------------------------------------------------------------------
-- This file has been automatically generated by the Caph compiler (version 2.8.5)
-- from file main.cph, on 2020-05-06 at 15:29:19, by <unknown>
-- For more information, see : http://caph.univ-bpclermont.fr
-- -------------------------------------------------------------------------------

library ieee,caph,work;
use ieee.std_logic_1164.all;
use caph.core.all;
use caph.data_types.all;
use ieee.numeric_std.all;
use work.all;
use work.sobel_globals.all;

entity sobel_net is
  port (
    w11_f: out std_logic;
    w11: in std_logic_vector(13 downto 0);
    w11_wr: in std_logic;
    w31_e: out std_logic;
    w31: out std_logic_vector(9 downto 0);
    w31_rd: in std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end sobel_net;

architecture arch of sobel_net is

component thr_act is
   generic (
    k: signed(11 downto 0)
    );
  port (
    i_empty: in std_logic;
    i: in std_logic_vector(13 downto 0);
    i_rd: out std_logic;
    o_full: in std_logic;
    o: out std_logic_vector(9 downto 0);
    o_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component asum_act is
   port (
    i1_empty: in std_logic;
    i1: in std_logic_vector(13 downto 0);
    i1_rd: out std_logic;
    i2_empty: in std_logic;
    i2: in std_logic_vector(13 downto 0);
    i2_rd: out std_logic;
    o_full: in std_logic;
    o: out std_logic_vector(13 downto 0);
    o_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component conv233a_act is
   generic (
    k: array3_array3_s12;
    n: integer;
    v: signed(11 downto 0)
    );
  port (
    i_empty: in std_logic;
    i: in std_logic_vector(13 downto 0);
    i_rd: out std_logic;
    z0_empty: in std_logic;
    z0: in std_logic_vector(11 downto 0);
    z0_rd: out std_logic;
    z1_empty: in std_logic;
    z1: in std_logic_vector(11 downto 0);
    z1_rd: out std_logic;
    o_full: in std_logic;
    o: out std_logic_vector(13 downto 0);
    o_wr: out std_logic;
    oz0_full: in std_logic;
    oz0: out std_logic_vector(11 downto 0);
    oz0_wr: out std_logic;
    oz1_full: in std_logic;
    oz1: out std_logic_vector(11 downto 0);
    oz1_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component split2 is
  generic ( size: integer := 10);
  port (  
       d_f:    out std_logic;
       d :     in std_logic_vector (size-1 downto 0);
       d_wr :  in std_logic;
       d1_f :  in std_logic;
       d1 :    out std_logic_vector(size-1 downto 0);
       d1_wr : out std_logic;
       d2_f :  in std_logic;
       d2 :    out std_logic_vector(size-1 downto 0);
       d2_wr : out std_logic
       );
end component;


signal w30_f : std_logic;
signal w30 : std_logic_vector(9 downto 0);
signal w30_wr : std_logic;
signal w28_f : std_logic;
signal w28 : std_logic_vector(13 downto 0);
signal w28_wr : std_logic;
signal w29_e : std_logic;
signal w29 : std_logic_vector(13 downto 0);
signal w29_rd : std_logic;
signal w26_f : std_logic;
signal w26 : std_logic_vector(13 downto 0);
signal w26_wr : std_logic;
signal w27_e : std_logic;
signal w27 : std_logic_vector(13 downto 0);
signal w27_rd : std_logic;
signal w24_f : std_logic;
signal w24 : std_logic_vector(13 downto 0);
signal w24_wr : std_logic;
signal w25_e : std_logic;
signal w25 : std_logic_vector(13 downto 0);
signal w25_rd : std_logic;
signal w22_f : std_logic;
signal w22 : std_logic_vector(11 downto 0);
signal w22_wr : std_logic;
signal w23_e : std_logic;
signal w23 : std_logic_vector(11 downto 0);
signal w23_rd : std_logic;
signal w20_f : std_logic;
signal w20 : std_logic_vector(11 downto 0);
signal w20_wr : std_logic;
signal w21_e : std_logic;
signal w21 : std_logic_vector(11 downto 0);
signal w21_rd : std_logic;
signal w18_f : std_logic;
signal w18 : std_logic_vector(13 downto 0);
signal w18_wr : std_logic;
signal w19_e : std_logic;
signal w19 : std_logic_vector(13 downto 0);
signal w19_rd : std_logic;
signal w16_f : std_logic;
signal w16 : std_logic_vector(11 downto 0);
signal w16_wr : std_logic;
signal w17_e : std_logic;
signal w17 : std_logic_vector(11 downto 0);
signal w17_rd : std_logic;
signal w14_f : std_logic;
signal w14 : std_logic_vector(11 downto 0);
signal w14_wr : std_logic;
signal w15_e : std_logic;
signal w15 : std_logic_vector(11 downto 0);
signal w15_rd : std_logic;
signal w12_f : std_logic;
signal w12 : std_logic_vector(13 downto 0);
signal w12_wr : std_logic;
signal w13_e : std_logic;
signal w13 : std_logic_vector(13 downto 0);
signal w13_rd : std_logic;

begin
  F23: fifo_small generic map (4,10) port map(w30_f,w30,w30_wr,w31_e,w31,w31_rd,clock,reset);
  F22: fifo_small generic map (4,14) port map(w28_f,w28,w28_wr,w29_e,w29,w29_rd,clock,reset);
  F21: fifo_small generic map (4,14) port map(w26_f,w26,w26_wr,w27_e,w27,w27_rd,clock,reset);
  F20: fifo_small generic map (4,14) port map(w24_f,w24,w24_wr,w25_e,w25,w25_rd,clock,reset);
  F19: fifo_small generic map (4,12) port map(w22_f,w22,w22_wr,w23_e,w23,w23_rd,clock,reset);
  F18: fifo_small generic map (4,12) port map(w20_f,w20,w20_wr,w21_e,w21,w21_rd,clock,reset);
  F17: fifo_small generic map (4,14) port map(w18_f,w18,w18_wr,w19_e,w19,w19_rd,clock,reset);
  F16: fifo_small generic map (4,12) port map(w16_f,w16,w16_wr,w17_e,w17,w17_rd,clock,reset);
  F15: fifo_small generic map (4,12) port map(w14_f,w14,w14_wr,w15_e,w15,w15_rd,clock,reset);
  F14: fifo_small generic map (4,14) port map(w12_f,w12,w12_wr,w13_e,w13,w13_rd,clock,reset);
  S13: split2 generic map (14) port map(w11_f,w11,w11_wr,w18_f,w18,w18_wr,w12_f,w12,w12_wr);
  B6: conv233a_act generic map ((0=>(0=>"000000000001",1=>"000000000000",2=>"111111111111"),1=>(0=>"000000000010",1=>"000000000000",2=>"111111111110"),2=>(0=>"000000000001",1=>"000000000000",2=>"111111111111")),0,"000000000000") port map(w13_e,w13,w13_rd,w15_e,w15,w15_rd,w17_e,w17,w17_rd,w24_f,w24,w24_wr,w14_f,w14,w14_wr,w16_f,w16,w16_wr,clock,reset);
  B10: conv233a_act generic map ((0=>(0=>"000000000001",1=>"000000000010",2=>"000000000001"),1=>(0=>"000000000000",1=>"000000000000",2=>"000000000000"),2=>(0=>"111111111111",1=>"111111111110",2=>"111111111111")),0,"000000000000") port map(w19_e,w19,w19_rd,w21_e,w21,w21_rd,w23_e,w23,w23_rd,w26_f,w26,w26_wr,w20_f,w20,w20_wr,w22_f,w22,w22_wr,clock,reset);
  B11: asum_act  port map(w25_e,w25,w25_rd,w27_e,w27,w27_rd,w28_f,w28,w28_wr,clock,reset);
  B12: thr_act generic map ("000001010000") port map(w29_e,w29,w29_rd,w30_f,w30,w30_wr,clock,reset);
end arch;
