-- -------------------------------------------------------------------------------
-- This file has been automatically generated by the Caph compiler (version 2.8.5)
-- from file main.cph, on 2020-05-08 at 00:10:27, by <unknown>
-- For more information, see : http://caph.univ-bpclermont.fr
-- -------------------------------------------------------------------------------

library ieee,caph,work;
use ieee.std_logic_1164.all;
use caph.core.all;
use caph.data_types.all;
use ieee.numeric_std.all;
use work.all;
use work.conv33_v1_globals.all;

entity conv33_v1_net is
  port (
    w42_f: out std_logic;
    w42: in std_logic_vector(17 downto 0);
    w42_wr: in std_logic;
    w92_e: out std_logic;
    w92: out std_logic_vector(17 downto 0);
    w92_rd: in std_logic;
    w134_e: out std_logic;
    w134: out std_logic_vector(17 downto 0);
    w134_rd: in std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end conv33_v1_net;

architecture arch of conv33_v1_net is

component abs_act is
   port (
    a_empty: in std_logic;
    a: in std_logic_vector(17 downto 0);
    a_rd: out std_logic;
    c_full: in std_logic;
    c: out std_logic_vector(17 downto 0);
    c_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component maddn_act is
   generic (
    k: array9_s16;
    n: unsigned(3 downto 0)
    );
  port (
    x0_empty: in std_logic;
    x0: in std_logic_vector(17 downto 0);
    x0_rd: out std_logic;
    x1_empty: in std_logic;
    x1: in std_logic_vector(17 downto 0);
    x1_rd: out std_logic;
    x2_empty: in std_logic;
    x2: in std_logic_vector(17 downto 0);
    x2_rd: out std_logic;
    x3_empty: in std_logic;
    x3: in std_logic_vector(17 downto 0);
    x3_rd: out std_logic;
    x4_empty: in std_logic;
    x4: in std_logic_vector(17 downto 0);
    x4_rd: out std_logic;
    x5_empty: in std_logic;
    x5: in std_logic_vector(17 downto 0);
    x5_rd: out std_logic;
    x6_empty: in std_logic;
    x6: in std_logic_vector(17 downto 0);
    x6_rd: out std_logic;
    x7_empty: in std_logic;
    x7: in std_logic_vector(17 downto 0);
    x7_rd: out std_logic;
    x8_empty: in std_logic;
    x8: in std_logic_vector(17 downto 0);
    x8_rd: out std_logic;
    s_full: in std_logic;
    s: out std_logic_vector(17 downto 0);
    s_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component d1lr_act is
   generic (
    v: signed(15 downto 0)
    );
  port (
    a_empty: in std_logic;
    a: in std_logic_vector(17 downto 0);
    a_rd: out std_logic;
    z_empty: in std_logic;
    z: in std_logic_vector(15 downto 0);
    z_rd: out std_logic;
    c_full: in std_logic;
    c: out std_logic_vector(17 downto 0);
    c_wr: out std_logic;
    zz_full: in std_logic;
    zz: out std_logic_vector(15 downto 0);
    zz_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component d1p_act is
   generic (
    v: signed(15 downto 0)
    );
  port (
    a_empty: in std_logic;
    a: in std_logic_vector(17 downto 0);
    a_rd: out std_logic;
    c_full: in std_logic;
    c: out std_logic_vector(17 downto 0);
    c_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end component;


component split6 is
  generic ( size: integer := 10);
  port (  
       d_f:    out std_logic;
       d :     in std_logic_vector (size-1 downto 0);
       d_wr :  in std_logic;
       d1_f :  in std_logic;
       d1 :    out std_logic_vector(size-1 downto 0);
       d1_wr : out std_logic;
       d2_f :  in std_logic;
       d2 :    out std_logic_vector(size-1 downto 0);
       d2_wr : out std_logic;
       d3_f :  in std_logic;
       d3 :    out std_logic_vector(size-1 downto 0);
       d3_wr : out std_logic;
       d4_f :  in std_logic;
       d4 :    out std_logic_vector(size-1 downto 0);
       d4_wr : out std_logic;
       d5_f :  in std_logic;
       d5 :    out std_logic_vector(size-1 downto 0);
       d5_wr : out std_logic;
       d6_f :  in std_logic;
       d6 :    out std_logic_vector(size-1 downto 0);
       d6_wr : out std_logic
       );
end component;

component split2 is
  generic ( size: integer := 10);
  port (  
       d_f:    out std_logic;
       d :     in std_logic_vector (size-1 downto 0);
       d_wr :  in std_logic;
       d1_f :  in std_logic;
       d1 :    out std_logic_vector(size-1 downto 0);
       d1_wr : out std_logic;
       d2_f :  in std_logic;
       d2 :    out std_logic_vector(size-1 downto 0);
       d2_wr : out std_logic
       );
end component;

component split3 is
  generic ( size: integer := 10);
  port (  
       d_f:    out std_logic;
       d :     in std_logic_vector (size-1 downto 0);
       d_wr :  in std_logic;
       d1_f :  in std_logic;
       d1 :    out std_logic_vector(size-1 downto 0);
       d1_wr : out std_logic;
       d2_f :  in std_logic;
       d2 :    out std_logic_vector(size-1 downto 0);
       d2_wr : out std_logic;
       d3_f :  in std_logic;
       d3 :    out std_logic_vector(size-1 downto 0);
       d3_wr : out std_logic
       );
end component;


signal w133_f : std_logic;
signal w133 : std_logic_vector(17 downto 0);
signal w133_wr : std_logic;
signal w131_f : std_logic;
signal w131 : std_logic_vector(15 downto 0);
signal w131_wr : std_logic;
signal w132_e : std_logic;
signal w132 : std_logic_vector(15 downto 0);
signal w132_rd : std_logic;
signal w129_f : std_logic;
signal w129 : std_logic_vector(17 downto 0);
signal w129_wr : std_logic;
signal w130_e : std_logic;
signal w130 : std_logic_vector(17 downto 0);
signal w130_rd : std_logic;
signal w127_f : std_logic;
signal w127 : std_logic_vector(15 downto 0);
signal w127_wr : std_logic;
signal w128_e : std_logic;
signal w128 : std_logic_vector(15 downto 0);
signal w128_rd : std_logic;
signal w125_f : std_logic;
signal w125 : std_logic_vector(17 downto 0);
signal w125_wr : std_logic;
signal w126_e : std_logic;
signal w126 : std_logic_vector(17 downto 0);
signal w126_rd : std_logic;
signal w123_f : std_logic;
signal w123 : std_logic_vector(17 downto 0);
signal w123_wr : std_logic;
signal w124_e : std_logic;
signal w124 : std_logic_vector(17 downto 0);
signal w124_rd : std_logic;
signal w121_f : std_logic;
signal w121 : std_logic_vector(17 downto 0);
signal w121_wr : std_logic;
signal w122_e : std_logic;
signal w122 : std_logic_vector(17 downto 0);
signal w122_rd : std_logic;
signal w119_f : std_logic;
signal w119 : std_logic_vector(17 downto 0);
signal w119_wr : std_logic;
signal w120_e : std_logic;
signal w120 : std_logic_vector(17 downto 0);
signal w120_rd : std_logic;
signal w117_f : std_logic;
signal w117 : std_logic_vector(17 downto 0);
signal w117_wr : std_logic;
signal w118_e : std_logic;
signal w118 : std_logic_vector(17 downto 0);
signal w118_rd : std_logic;
signal w115_f : std_logic;
signal w115 : std_logic_vector(17 downto 0);
signal w115_wr : std_logic;
signal w116_e : std_logic;
signal w116 : std_logic_vector(17 downto 0);
signal w116_rd : std_logic;
signal w113_f : std_logic;
signal w113 : std_logic_vector(17 downto 0);
signal w113_wr : std_logic;
signal w114_e : std_logic;
signal w114 : std_logic_vector(17 downto 0);
signal w114_rd : std_logic;
signal w111_f : std_logic;
signal w111 : std_logic_vector(17 downto 0);
signal w111_wr : std_logic;
signal w112_e : std_logic;
signal w112 : std_logic_vector(17 downto 0);
signal w112_rd : std_logic;
signal w109_f : std_logic;
signal w109 : std_logic_vector(17 downto 0);
signal w109_wr : std_logic;
signal w110_e : std_logic;
signal w110 : std_logic_vector(17 downto 0);
signal w110_rd : std_logic;
signal w107_f : std_logic;
signal w107 : std_logic_vector(17 downto 0);
signal w107_wr : std_logic;
signal w108_e : std_logic;
signal w108 : std_logic_vector(17 downto 0);
signal w108_rd : std_logic;
signal w105_f : std_logic;
signal w105 : std_logic_vector(17 downto 0);
signal w105_wr : std_logic;
signal w106_e : std_logic;
signal w106 : std_logic_vector(17 downto 0);
signal w106_rd : std_logic;
signal w103_f : std_logic;
signal w103 : std_logic_vector(17 downto 0);
signal w103_wr : std_logic;
signal w104_e : std_logic;
signal w104 : std_logic_vector(17 downto 0);
signal w104_rd : std_logic;
signal w101_f : std_logic;
signal w101 : std_logic_vector(17 downto 0);
signal w101_wr : std_logic;
signal w102_e : std_logic;
signal w102 : std_logic_vector(17 downto 0);
signal w102_rd : std_logic;
signal w99_f : std_logic;
signal w99 : std_logic_vector(17 downto 0);
signal w99_wr : std_logic;
signal w100_e : std_logic;
signal w100 : std_logic_vector(17 downto 0);
signal w100_rd : std_logic;
signal w97_f : std_logic;
signal w97 : std_logic_vector(17 downto 0);
signal w97_wr : std_logic;
signal w98_e : std_logic;
signal w98 : std_logic_vector(17 downto 0);
signal w98_rd : std_logic;
signal w95_f : std_logic;
signal w95 : std_logic_vector(17 downto 0);
signal w95_wr : std_logic;
signal w96_e : std_logic;
signal w96 : std_logic_vector(17 downto 0);
signal w96_rd : std_logic;
signal w93_f : std_logic;
signal w93 : std_logic_vector(17 downto 0);
signal w93_wr : std_logic;
signal w94_e : std_logic;
signal w94 : std_logic_vector(17 downto 0);
signal w94_rd : std_logic;
signal w91_f : std_logic;
signal w91 : std_logic_vector(17 downto 0);
signal w91_wr : std_logic;
signal w89_f : std_logic;
signal w89 : std_logic_vector(15 downto 0);
signal w89_wr : std_logic;
signal w90_e : std_logic;
signal w90 : std_logic_vector(15 downto 0);
signal w90_rd : std_logic;
signal w87_f : std_logic;
signal w87 : std_logic_vector(17 downto 0);
signal w87_wr : std_logic;
signal w88_e : std_logic;
signal w88 : std_logic_vector(17 downto 0);
signal w88_rd : std_logic;
signal w85_f : std_logic;
signal w85 : std_logic_vector(15 downto 0);
signal w85_wr : std_logic;
signal w86_e : std_logic;
signal w86 : std_logic_vector(15 downto 0);
signal w86_rd : std_logic;
signal w83_f : std_logic;
signal w83 : std_logic_vector(17 downto 0);
signal w83_wr : std_logic;
signal w84_e : std_logic;
signal w84 : std_logic_vector(17 downto 0);
signal w84_rd : std_logic;
signal w81_f : std_logic;
signal w81 : std_logic_vector(17 downto 0);
signal w81_wr : std_logic;
signal w82_e : std_logic;
signal w82 : std_logic_vector(17 downto 0);
signal w82_rd : std_logic;
signal w79_f : std_logic;
signal w79 : std_logic_vector(17 downto 0);
signal w79_wr : std_logic;
signal w80_e : std_logic;
signal w80 : std_logic_vector(17 downto 0);
signal w80_rd : std_logic;
signal w77_f : std_logic;
signal w77 : std_logic_vector(17 downto 0);
signal w77_wr : std_logic;
signal w78_e : std_logic;
signal w78 : std_logic_vector(17 downto 0);
signal w78_rd : std_logic;
signal w75_f : std_logic;
signal w75 : std_logic_vector(17 downto 0);
signal w75_wr : std_logic;
signal w76_e : std_logic;
signal w76 : std_logic_vector(17 downto 0);
signal w76_rd : std_logic;
signal w73_f : std_logic;
signal w73 : std_logic_vector(17 downto 0);
signal w73_wr : std_logic;
signal w74_e : std_logic;
signal w74 : std_logic_vector(17 downto 0);
signal w74_rd : std_logic;
signal w71_f : std_logic;
signal w71 : std_logic_vector(17 downto 0);
signal w71_wr : std_logic;
signal w72_e : std_logic;
signal w72 : std_logic_vector(17 downto 0);
signal w72_rd : std_logic;
signal w69_f : std_logic;
signal w69 : std_logic_vector(17 downto 0);
signal w69_wr : std_logic;
signal w70_e : std_logic;
signal w70 : std_logic_vector(17 downto 0);
signal w70_rd : std_logic;
signal w67_f : std_logic;
signal w67 : std_logic_vector(17 downto 0);
signal w67_wr : std_logic;
signal w68_e : std_logic;
signal w68 : std_logic_vector(17 downto 0);
signal w68_rd : std_logic;
signal w65_f : std_logic;
signal w65 : std_logic_vector(17 downto 0);
signal w65_wr : std_logic;
signal w66_e : std_logic;
signal w66 : std_logic_vector(17 downto 0);
signal w66_rd : std_logic;
signal w63_f : std_logic;
signal w63 : std_logic_vector(17 downto 0);
signal w63_wr : std_logic;
signal w64_e : std_logic;
signal w64 : std_logic_vector(17 downto 0);
signal w64_rd : std_logic;
signal w61_f : std_logic;
signal w61 : std_logic_vector(17 downto 0);
signal w61_wr : std_logic;
signal w62_e : std_logic;
signal w62 : std_logic_vector(17 downto 0);
signal w62_rd : std_logic;
signal w59_f : std_logic;
signal w59 : std_logic_vector(17 downto 0);
signal w59_wr : std_logic;
signal w60_e : std_logic;
signal w60 : std_logic_vector(17 downto 0);
signal w60_rd : std_logic;
signal w57_f : std_logic;
signal w57 : std_logic_vector(17 downto 0);
signal w57_wr : std_logic;
signal w58_e : std_logic;
signal w58 : std_logic_vector(17 downto 0);
signal w58_rd : std_logic;
signal w55_f : std_logic;
signal w55 : std_logic_vector(17 downto 0);
signal w55_wr : std_logic;
signal w56_e : std_logic;
signal w56 : std_logic_vector(17 downto 0);
signal w56_rd : std_logic;
signal w53_f : std_logic;
signal w53 : std_logic_vector(17 downto 0);
signal w53_wr : std_logic;
signal w54_e : std_logic;
signal w54 : std_logic_vector(17 downto 0);
signal w54_rd : std_logic;
signal w43_f : std_logic;
signal w43 : std_logic_vector(17 downto 0);
signal w43_wr : std_logic;
signal w44_f : std_logic;
signal w44 : std_logic_vector(17 downto 0);
signal w44_wr : std_logic;
signal w45_f : std_logic;
signal w45 : std_logic_vector(17 downto 0);
signal w45_wr : std_logic;
signal w46_f : std_logic;
signal w46 : std_logic_vector(17 downto 0);
signal w46_wr : std_logic;
signal w47_f : std_logic;
signal w47 : std_logic_vector(17 downto 0);
signal w47_wr : std_logic;
signal w48_f : std_logic;
signal w48 : std_logic_vector(17 downto 0);
signal w48_wr : std_logic;
signal w49_f : std_logic;
signal w49 : std_logic_vector(17 downto 0);
signal w49_wr : std_logic;
signal w50_f : std_logic;
signal w50 : std_logic_vector(17 downto 0);
signal w50_wr : std_logic;
signal w51_f : std_logic;
signal w51 : std_logic_vector(17 downto 0);
signal w51_wr : std_logic;
signal w52_f : std_logic;
signal w52 : std_logic_vector(17 downto 0);
signal w52_wr : std_logic;

begin
  F82: fifo_small generic map (4,18) port map(w133_f,w133,w133_wr,w134_e,w134,w134_rd,clock,reset);
  F81: fifo_small generic map (4,16) port map(w131_f,w131,w131_wr,w132_e,w132,w132_rd,clock,reset);
  F80: fifo_small generic map (4,18) port map(w129_f,w129,w129_wr,w130_e,w130,w130_rd,clock,reset);
  F79: fifo_small generic map (4,16) port map(w127_f,w127,w127_wr,w128_e,w128,w128_rd,clock,reset);
  F78: fifo_small generic map (4,18) port map(w125_f,w125,w125_wr,w126_e,w126,w126_rd,clock,reset);
  F77: fifo_small generic map (4,18) port map(w123_f,w123,w123_wr,w124_e,w124,w124_rd,clock,reset);
  F76: fifo_small generic map (4,18) port map(w121_f,w121,w121_wr,w122_e,w122,w122_rd,clock,reset);
  F75: fifo_small generic map (4,18) port map(w119_f,w119,w119_wr,w120_e,w120,w120_rd,clock,reset);
  F74: fifo_small generic map (4,18) port map(w117_f,w117,w117_wr,w118_e,w118,w118_rd,clock,reset);
  F73: fifo_small generic map (4,18) port map(w115_f,w115,w115_wr,w116_e,w116,w116_rd,clock,reset);
  F72: fifo_small generic map (4,18) port map(w113_f,w113,w113_wr,w114_e,w114,w114_rd,clock,reset);
  F71: fifo_small generic map (4,18) port map(w111_f,w111,w111_wr,w112_e,w112,w112_rd,clock,reset);
  F70: fifo_small generic map (4,18) port map(w109_f,w109,w109_wr,w110_e,w110,w110_rd,clock,reset);
  F69: fifo_small generic map (4,18) port map(w107_f,w107,w107_wr,w108_e,w108,w108_rd,clock,reset);
  F68: fifo_small generic map (4,18) port map(w105_f,w105,w105_wr,w106_e,w106,w106_rd,clock,reset);
  F67: fifo_small generic map (4,18) port map(w103_f,w103,w103_wr,w104_e,w104,w104_rd,clock,reset);
  F66: fifo_small generic map (4,18) port map(w101_f,w101,w101_wr,w102_e,w102,w102_rd,clock,reset);
  F65: fifo_small generic map (4,18) port map(w99_f,w99,w99_wr,w100_e,w100,w100_rd,clock,reset);
  F64: fifo_small generic map (4,18) port map(w97_f,w97,w97_wr,w98_e,w98,w98_rd,clock,reset);
  F63: fifo_small generic map (4,18) port map(w95_f,w95,w95_wr,w96_e,w96,w96_rd,clock,reset);
  F62: fifo_small generic map (4,18) port map(w93_f,w93,w93_wr,w94_e,w94,w94_rd,clock,reset);
  F61: fifo_small generic map (4,18) port map(w91_f,w91,w91_wr,w92_e,w92,w92_rd,clock,reset);
  F60: fifo_small generic map (4,16) port map(w89_f,w89,w89_wr,w90_e,w90,w90_rd,clock,reset);
  F59: fifo_small generic map (4,18) port map(w87_f,w87,w87_wr,w88_e,w88,w88_rd,clock,reset);
  F58: fifo_small generic map (4,16) port map(w85_f,w85,w85_wr,w86_e,w86,w86_rd,clock,reset);
  F57: fifo_small generic map (4,18) port map(w83_f,w83,w83_wr,w84_e,w84,w84_rd,clock,reset);
  F56: fifo_small generic map (4,18) port map(w81_f,w81,w81_wr,w82_e,w82,w82_rd,clock,reset);
  F55: fifo_small generic map (4,18) port map(w79_f,w79,w79_wr,w80_e,w80,w80_rd,clock,reset);
  F54: fifo_small generic map (4,18) port map(w77_f,w77,w77_wr,w78_e,w78,w78_rd,clock,reset);
  F53: fifo_small generic map (4,18) port map(w75_f,w75,w75_wr,w76_e,w76,w76_rd,clock,reset);
  F52: fifo_small generic map (4,18) port map(w73_f,w73,w73_wr,w74_e,w74,w74_rd,clock,reset);
  F51: fifo_small generic map (4,18) port map(w71_f,w71,w71_wr,w72_e,w72,w72_rd,clock,reset);
  F50: fifo_small generic map (4,18) port map(w69_f,w69,w69_wr,w70_e,w70,w70_rd,clock,reset);
  F49: fifo_small generic map (4,18) port map(w67_f,w67,w67_wr,w68_e,w68,w68_rd,clock,reset);
  F48: fifo_small generic map (4,18) port map(w65_f,w65,w65_wr,w66_e,w66,w66_rd,clock,reset);
  F47: fifo_small generic map (4,18) port map(w63_f,w63,w63_wr,w64_e,w64,w64_rd,clock,reset);
  F46: fifo_small generic map (4,18) port map(w61_f,w61,w61_wr,w62_e,w62,w62_rd,clock,reset);
  F45: fifo_small generic map (4,18) port map(w59_f,w59,w59_wr,w60_e,w60,w60_rd,clock,reset);
  F44: fifo_small generic map (4,18) port map(w57_f,w57,w57_wr,w58_e,w58,w58_rd,clock,reset);
  F43: fifo_small generic map (4,18) port map(w55_f,w55,w55_wr,w56_e,w56,w56_rd,clock,reset);
  F42: fifo_small generic map (4,18) port map(w53_f,w53,w53_wr,w54_e,w54,w54_rd,clock,reset);
  S41: split3 generic map (18) port map(w52_f,w52,w52_wr,w125_f,w125,w125_wr,w119_f,w119,w119_wr,w101_f,w101,w101_wr);
  S40: split2 generic map (18) port map(w51_f,w51,w51_wr,w115_f,w115,w115_wr,w107_f,w107,w107_wr);
  S39: split2 generic map (18) port map(w50_f,w50,w50_wr,w121_f,w121,w121_wr,w97_f,w97,w97_wr);
  S38: split2 generic map (18) port map(w49_f,w49,w49_wr,w117_f,w117,w117_wr,w103_f,w103,w103_wr);
  S37: split2 generic map (18) port map(w48_f,w48,w48_wr,w113_f,w113,w113_wr,w109_f,w109,w109_wr);
  S36: split3 generic map (18) port map(w47_f,w47,w47_wr,w83_f,w83,w83_wr,w77_f,w77,w77_wr,w59_f,w59,w59_wr);
  S35: split2 generic map (18) port map(w46_f,w46,w46_wr,w73_f,w73,w73_wr,w65_f,w65,w65_wr);
  S34: split2 generic map (18) port map(w45_f,w45,w45_wr,w79_f,w79,w79_wr,w55_f,w55,w55_wr);
  S33: split2 generic map (18) port map(w44_f,w44,w44_wr,w75_f,w75,w75_wr,w61_f,w61,w61_wr);
  S32: split2 generic map (18) port map(w43_f,w43,w43_wr,w71_f,w71,w71_wr,w67_f,w67,w67_wr);
  S31: split6 generic map (18) port map(w42_f,w42,w42_wr,w129_f,w129,w129_wr,w123_f,w123,w123_wr,w95_f,w95,w95_wr,w87_f,w87,w87_wr,w81_f,w81,w81_wr,w53_f,w53,w53_wr);
  B16: maddn_act generic map ((0=>"0000000000000001",1=>"0000000000000010",2=>"0000000000000001",3=>"0000000000000010",4=>"0000000000000100",5=>"0000000000000010",6=>"0000000000000001",7=>"0000000000000010",8=>"0000000000000001"),"0100") port map(w54_e,w54,w54_rd,w56_e,w56,w56_rd,w58_e,w58,w58_rd,w60_e,w60,w60_rd,w62_e,w62,w62_rd,w64_e,w64,w64_rd,w66_e,w66,w66_rd,w68_e,w68,w68_rd,w70_e,w70,w70_rd,w91_f,w91,w91_wr,clock,reset);
  B15: d1p_act generic map ("0000000000000000") port map(w72_e,w72,w72_rd,w69_f,w69,w69_wr,clock,reset);
  B14: d1p_act generic map ("0000000000000000") port map(w74_e,w74,w74_rd,w43_f,w43,w43_wr,clock,reset);
  B13: d1p_act generic map ("0000000000000000") port map(w76_e,w76,w76_rd,w63_f,w63,w63_wr,clock,reset);
  B12: d1p_act generic map ("0000000000000000") port map(w78_e,w78,w78_rd,w44_f,w44,w44_wr,clock,reset);
  B11: d1p_act generic map ("0000000000000000") port map(w80_e,w80,w80_rd,w57_f,w57,w57_wr,clock,reset);
  B10: d1p_act generic map ("0000000000000000") port map(w82_e,w82,w82_rd,w45_f,w45,w45_wr,clock,reset);
  B9: d1lr_act generic map ("0000000000000000") port map(w84_e,w84,w84_rd,w86_e,w86,w86_rd,w46_f,w46,w46_wr,w85_f,w85,w85_wr,clock,reset);
  B6: d1lr_act generic map ("0000000000000000") port map(w88_e,w88,w88_rd,w90_e,w90,w90_rd,w47_f,w47,w47_wr,w89_f,w89,w89_wr,clock,reset);
  B30: abs_act  port map(w94_e,w94,w94_rd,w133_f,w133,w133_wr,clock,reset);
  B29: maddn_act generic map ((0=>"0000000000000000",1=>"1111111111111111",2=>"0000000000000000",3=>"1111111111111111",4=>"0000000000000100",5=>"1111111111111111",6=>"0000000000000000",7=>"1111111111111111",8=>"0000000000000000"),"0000") port map(w96_e,w96,w96_rd,w98_e,w98,w98_rd,w100_e,w100,w100_rd,w102_e,w102,w102_rd,w104_e,w104,w104_rd,w106_e,w106,w106_rd,w108_e,w108,w108_rd,w110_e,w110,w110_rd,w112_e,w112,w112_rd,w93_f,w93,w93_wr,clock,reset);
  B28: d1p_act generic map ("0000000000000000") port map(w114_e,w114,w114_rd,w111_f,w111,w111_wr,clock,reset);
  B27: d1p_act generic map ("0000000000000000") port map(w116_e,w116,w116_rd,w48_f,w48,w48_wr,clock,reset);
  B26: d1p_act generic map ("0000000000000000") port map(w118_e,w118,w118_rd,w105_f,w105,w105_wr,clock,reset);
  B25: d1p_act generic map ("0000000000000000") port map(w120_e,w120,w120_rd,w49_f,w49,w49_wr,clock,reset);
  B24: d1p_act generic map ("0000000000000000") port map(w122_e,w122,w122_rd,w99_f,w99,w99_wr,clock,reset);
  B23: d1p_act generic map ("0000000000000000") port map(w124_e,w124,w124_rd,w50_f,w50,w50_wr,clock,reset);
  B22: d1lr_act generic map ("0000000000000000") port map(w126_e,w126,w126_rd,w128_e,w128,w128_rd,w51_f,w51,w51_wr,w127_f,w127,w127_wr,clock,reset);
  B19: d1lr_act generic map ("0000000000000000") port map(w130_e,w130,w130_rd,w132_e,w132,w132_rd,w52_f,w52,w52_wr,w131_f,w131,w131_wr,clock,reset);
end arch;
